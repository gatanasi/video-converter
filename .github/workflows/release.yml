name: Release Video Converter

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'main'
        type: string

permissions:
  contents: write
  actions: write

jobs:
  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [22.x]
        pnpm-version: [10.x]

    steps:
    - name: Checkout code from specified branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ matrix.pnpm-version }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: frontend/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - name: Build frontend
      run: pnpm run build

    - name: Run frontend tests
      run: pnpm test

    - name: Upload frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code from specified branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.2
          working-directory: ./backend

      - name: Check formatting
        run: test -z "$(gofmt -l .)"

      - name: Build backend
        run: go build -v -ldflags="-s -w" -o ../video-converter-app ./cmd/server/main.go

      - name: Run backend tests
        run: go test -v ./...

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: video-converter-app

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    # Only run on manual trigger
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code from specified branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: .

      - name: Create Release Tag
        id: tag
        run: echo "tag_name=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Release ${{ steps.tag.outputs.tag_name }}
          body: |
            Manual release.
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false
          files: |
            ./video-converter-app
            frontend/dist/**

      - name: Placeholder for release steps
        run: |
          echo "Starting release process for branch ${{ github.event.inputs.branch }}..."
          # Add steps here to:
          # - Deploy to production environment
          echo "Release process finished."
