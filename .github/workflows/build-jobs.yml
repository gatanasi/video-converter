name: Video Converter Build Jobs

on:
  workflow_call:
    inputs:
      node_version:
        required: false
        type: string
        default: '22.x'
      go_version:
        required: false
        type: string
        default: '1.25'
      go_lint_version:
        required: false
        type: string
        default: 'v2.2.0'
      build_docker:
        required: false
        type: boolean
        default: false
      push_docker:
        required: false
        type: boolean
        default: false
      app_version:
        required: false
        type: string
        default: ${{ github.sha }}
    outputs:
      docker_image:
        description: "Video Converter Docker Image"
        value: ${{ jobs.docker-build.outputs.image_tag }}

permissions:
  contents: read
  packages: write

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Frontend linting/testing
      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: pnpm test

      # Backend linting/testing
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ inputs.go_version }}
          check-latest: true
          cache-dependency-path: backend/go.sum

      - name: Install backend dependencies
        working-directory: ./backend
        run: go mod download

      - name: Run golangci-lint ${{ inputs.go_lint_version }}
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: ${{ inputs.go_lint_version }}
          working-directory: ./backend

      - name: Check formatting
        working-directory: ./backend
        run: test -z "$(gofmt -l .)" || (echo "Go code is not formatted. Run 'gofmt -w .' "; exit 1)

      - name: Run backend tests
        working-directory: ./backend
        run: go test -v ./...

  docker-build:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: inputs.build_docker == true
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Log in to GitHub Container Registry
        if: inputs.push_docker == true
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ inputs.app_version }},enable=${{ inputs.app_version != github.sha }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.app_version }},enable=${{ inputs.app_version != github.sha }}
            type=semver,pattern={{major}},value=${{ inputs.app_version }},enable=${{ inputs.app_version != github.sha }}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: ./Dockerfile
          push: ${{ inputs.push_docker }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ inputs.app_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
